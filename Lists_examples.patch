Index: src/main/java/pl/com/empas/java_introductory_course/io/Examples/DirectoryBrowsingExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/pl/com/empas/java_introductory_course/io/Examples/DirectoryBrowsingExample.java	(date 1524074384538)
+++ src/main/java/pl/com/empas/java_introductory_course/io/Examples/DirectoryBrowsingExample.java	(date 1524074384538)
@@ -0,0 +1,30 @@
+package pl.com.empas.java_introductory_course.io.Examples;
+
+import java.io.IOException;
+import java.nio.file.FileStore;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+import java.util.Iterator;
+
+public class DirectoryBrowsingExample {
+
+    public static void main(String[] args) {
+        Path path = Paths.get("C:\\Users\\Aneta\\Desktop\\PROGRANOWANIE");
+        System.out.println(path.getFileName());
+        Path parent = path.getParent();
+        System.out.println(parent.getFileName());
+        Path grandParent = parent.getParent();
+        System.out.println(grandParent.getFileName());
+
+        Path source = Paths.get("C:\\Users\\Aneta\\Desktop\\PROGRANOWANIE\\17.04.2018\\java-introductory-course\\src\\main\\java\\pl\\com\\empas\\java_introductory_course\\io\\Examples\\FileCreateExample.java");
+        Path target = Paths.get(path.toAbsolutePath().toString() + "test.java");
+        try {
+            Files.copy(source, target);
+        } catch (IOException e) {
+            e.printStackTrace();
+
+        }
+    }
+}
+
Index: src/main/java/pl/com/empas/java_introductory_course/io/Examples/FileCreateExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/pl/com/empas/java_introductory_course/io/Examples/FileCreateExample.java	(date 1524071683194)
+++ src/main/java/pl/com/empas/java_introductory_course/io/Examples/FileCreateExample.java	(date 1524071683194)
@@ -0,0 +1,35 @@
+package pl.com.empas.java_introductory_course.io.Examples;
+
+import java.io.IOException;
+import java.net.URL;
+import java.nio.ByteBuffer;
+import java.nio.channels.SeekableByteChannel;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+import java.nio.file.StandardOpenOption;
+import java.nio.file.attribute.FileAttribute;
+import java.util.HashSet;
+import java.util.Set;
+
+public class FileCreateExample {
+    public static void main(String[] args) {
+
+        // URL url = FileCreateExample.class.getResource("Test.txt");
+        Path path = Paths.get("Text.txt");
+        System.out.println(Files.exists(path));
+        if (!Files.exists(path)){
+            try {
+                Path createdFile = Files.createFile(path);
+                Set<StandardOpenOption> options = new HashSet<>();
+                options.add(StandardOpenOption.APPEND);  //musimy podać opcję APPEND aby móc pisać w pliku.
+                                                         // Java domyślnie uznaje, że nie możemy pisać w pliku
+                SeekableByteChannel byteChannel = Files.newByteChannel(path);
+                ByteBuffer buffer = ByteBuffer.wrap("This is\n a multiline\n text".getBytes());
+                byteChannel.write(buffer);
+            }catch(IOException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+}
Index: src/main/java/pl/com/empas/java_introductory_course/io/nio/ReadFileExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/pl/com/empas/java_introductory_course/io/nio/ReadFileExample.java	(revision 4b55cf1cb639ff0e66f1b20281670f642468146f)
+++ src/main/java/pl/com/empas/java_introductory_course/io/nio/ReadFileExample.java	(date 1524070504981)
@@ -36,7 +36,7 @@
     //proper :)
     public static void readStringFromReader(Path path) {
 
-        Charset charset = Charset.forName("UTF8");
+        Charset charset = Charset.forName("UTF8");  // UTF8 system kodowania Unicode, wykorzystujący od 1 do 6 bajtów do zakodowania pojedynczego znaku
         try {
             BufferedReader bufferedReader = Files.newBufferedReader(path, charset);
             String line = null;
Index: src/main/java/pl/com/empas/java_introductory_course/io/old/ReadFileExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/pl/com/empas/java_introductory_course/io/old/ReadFileExample.java	(revision 4b55cf1cb639ff0e66f1b20281670f642468146f)
+++ src/main/java/pl/com/empas/java_introductory_course/io/old/ReadFileExample.java	(date 1524068936556)
@@ -23,7 +23,7 @@
                         sb.append(line).append("\n");
                     }
                     System.out.println(sb.toString());
-                    inputStream.close();
+                    inputStream.close();  //zamykanie strumienia.Trzeba zamykać strumień bo plik będzie cały czas widniał jako zajęty
                 } catch(IOException e) {
                     e.printStackTrace();
                 } finally {
Index: src/main/java/pl/com/empas/java_introductory_course/java8/live_examples/common/examples/LambdaExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/pl/com/empas/java_introductory_course/java8/live_examples/common/examples/LambdaExample.java	(date 1524058067189)
+++ src/main/java/pl/com/empas/java_introductory_course/java8/live_examples/common/examples/LambdaExample.java	(date 1524058067189)
@@ -0,0 +1,57 @@
+package pl.com.empas.java_introductory_course.java8.live_examples.common.examples;
+
+import java.time.LocalDate;
+import java.time.LocalDateTime;
+import java.time.ZoneId;
+import java.time.format.DateTimeFormatter;
+import java.util.*;
+import java.util.stream.Collectors;
+
+
+public class LambdaExample {
+
+    public static void main(String[] args)
+
+    // zadanie, w którym mieliśmy wyfiltrować liczby dodatnie i zsumować
+    {
+        List<Integer> listInt = Arrays.asList(8, 9, 111, 23, 44, 55, 1, -123, 66, 88, -12345);
+
+        System.out.println(
+                listInt
+                        .stream()             // (tworzymy strumień
+                        .mapToInt(x -> x)     // mapujemy do strumienia intów
+                        .filter(x -> x >= 0)  // filtrujemy nieujemne liczby
+                        .sum()                // i sumujemy
+        );
+
+        ;
+        // Collectiom.frequency(collection.element)
+        // Stream<T>.count()
+        // Znaleźć ilość powtarzających się wartości w mapie
+        Map<String, String> map = new HashMap<>();
+        map.put("01", "aa");
+        map.put("02", "bb");
+        map.put("03", "cc");
+        map.put("04", "dd");
+        map.put("05", "aa");
+
+        System.out.println(
+                map.values()
+                        .stream()
+                        .distinct()
+                        .filter(x -> Collections.frequency(map.values(), x) > 1)
+                        .count()
+        );
+
+        // FORMAT: YYYY-MM-dd
+        // Przekształcić listę dat do listy stringów wedle formatu podanego powyżej
+
+        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("YYYY-MM-dd");
+        List<LocalDate> dates = Arrays.asList(
+                LocalDate.now(), LocalDate.now().plusDays(2), LocalDate.now().minusMonths(1));
+                List<String> dateString = dates.stream().map(date -> date.format(formatter)).collect(Collectors.toList());
+        System.out.println(dateString);
+
+    }
+
+}
Index: src/main/java/pl/com/empas/java_introductory_course/time/java8/DateConversionExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/pl/com/empas/java_introductory_course/time/java8/DateConversionExample.java	(date 1523987644627)
+++ src/main/java/pl/com/empas/java_introductory_course/time/java8/DateConversionExample.java	(date 1523987644627)
@@ -0,0 +1,31 @@
+package pl.com.empas.java_introductory_course.time.java8;
+
+import java.time.LocalDateTime;
+import java.time.ZoneId;
+import java.util.Calendar;
+import java.util.Date;
+
+public class DateConversionExample {
+
+    public static String formatDate(LocalDateTime dateTime){
+        return null;
+    }
+
+    public static void main(String[] args) {
+        Date date = new Date();
+        Calendar calendar = Calendar.getInstance();
+        calendar.setTime(date);
+        LocalDateTime dateTime = LocalDateTime.of(
+                calendar.get(Calendar.YEAR),
+                calendar.get(Calendar.MONTH) + 1,  //zwraca numery miesiącazaczynając od 0
+                calendar.get(Calendar.DAY_OF_MONTH),
+                calendar.get(Calendar.HOUR_OF_DAY),
+                calendar.get(Calendar.MINUTE));
+
+        LocalDateTime dateTime2 = date.toInstant().atZone(ZoneId.of("Europe/Warsaw")).toLocalDateTime();
+
+        System.out.println(date);
+        System.out.println(dateTime);
+        System.out.println(dateTime2);
+        }
+}
Index: src/main/java/pl/com/empas/java_introductory_course/time/java8/LocalDateExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/pl/com/empas/java_introductory_course/time/java8/LocalDateExample.java	(revision 4b55cf1cb639ff0e66f1b20281670f642468146f)
+++ src/main/java/pl/com/empas/java_introductory_course/time/java8/LocalDateExample.java	(date 1523984944243)
@@ -3,6 +3,7 @@
 import java.time.LocalDate;
 import java.time.LocalDateTime;
 import java.time.LocalTime;
+import java.time.format.DateTimeFormatter;
 import java.time.temporal.TemporalAdjuster;
 import java.time.temporal.TemporalField;
 
@@ -10,15 +11,18 @@
 
     public static void main(String[] args) {
         LocalDate date = LocalDate.now();
-        LocalDate future = LocalDate.now().plusDays(1);
-        LocalDateTime past = LocalDateTime.now().with(LocalTime.of(17, 18));
+        LocalDate future = LocalDate.now().plusDays(1).plusYears(2);  // dodanie dni i lat do daty z linii powyżej
+        LocalDateTime futureWithTime = LocalDateTime.now().with(LocalTime.of(17, 18));
 
         System.out.println(date);
         System.out.println(future);
-        System.out.println(past);
+        System.out.println(futureWithTime);
 
         System.out.println(date.compareTo(future));
-        System.out.println(future.compareTo(past.toLocalDate()));
+        System.out.println(future.compareTo(futureWithTime.toLocalDate()));  //toLocalDate wyciąga samą datę z futureWithTime, w którym jest też godzina
 
+        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("YYYY-MM-dd HH:mm:ss");
+        System.out.println(formatter.format(futureWithTime));
+        futureWithTime.format(formatter);
     }
 }
Index: src/main/java/pl/com/empas/java_introductory_course/time/java8/PlanesExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/pl/com/empas/java_introductory_course/time/java8/PlanesExample.java	(revision 4b55cf1cb639ff0e66f1b20281670f642468146f)
+++ src/main/java/pl/com/empas/java_introductory_course/time/java8/PlanesExample.java	(date 1523985371024)
@@ -15,7 +15,7 @@
         System.out.println("LocalDateTime : " + format.format(localDateTime));
 
 
-        ZonedDateTime parisDateTime = localDateTime.atZone(ZoneId.of("Europe/Paris"));
+        ZonedDateTime parisDateTime = localDateTime.atZone(ZoneId.of("Europe/Paris"));  // ZoneId.of stworzenie strefy czasowej na podstawie podanego ID ("Europe/Paris")
         System.out.println("Depart : " + format.format(parisDateTime));
 
 
Index: src/main/java/pl/com/empas/java_introductory_course/time/standard/CalendarExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/pl/com/empas/java_introductory_course/time/standard/CalendarExample.java	(revision 4b55cf1cb639ff0e66f1b20281670f642468146f)
+++ src/main/java/pl/com/empas/java_introductory_course/time/standard/CalendarExample.java	(date 1523983955366)
@@ -1,6 +1,10 @@
 package pl.com.empas.java_introductory_course.time.standard;
 
+import javax.sound.midi.Soundbank;
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
 import java.util.Calendar;
+import java.util.Date;
 import java.util.Locale;
 
 public class CalendarExample {
@@ -10,7 +14,11 @@
         System.out.println(calendar.getCalendarType());
         calendar.add(Calendar.DAY_OF_MONTH, 5);
         System.out.println(calendar.getTime());
-        System.out.println(calendar.getTimeZone().getDisplayName(Locale.getDefault()));
+        System.out.println(calendar.getTimeZone().getDisplayName(Locale.GERMANY));
         System.out.println(calendar.get(Calendar.YEAR));
+
+        Locale koreanLocale = Locale.KOREAN;
+        DateFormat format = SimpleDateFormat.getDateInstance(0, koreanLocale);
+        System.out.println(format.format(new Date()));
     }
 }
Index: src/main/java/pl/com/empas/java_introductory_course/time/standard/DateExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/pl/com/empas/java_introductory_course/time/standard/DateExample.java	(revision 4b55cf1cb639ff0e66f1b20281670f642468146f)
+++ src/main/java/pl/com/empas/java_introductory_course/time/standard/DateExample.java	(date 1523982459408)
@@ -8,20 +8,25 @@
 public class DateExample {
 
     public static void main(String[] args) {
-        Date now = new Date();
+        long currentTime = System.currentTimeMillis();   // obecny czas podany w milisekundach od 1970 roku
+        Date now = new Date(currentTime);
         Calendar calendar = Calendar.getInstance();
-        calendar.add(Calendar.DAY_OF_YEAR, 1);
+        calendar.setTime(now);
+        calendar.get(Calendar.HOUR_OF_DAY);
+        calendar.get(Calendar.APRIL);
+        calendar.add(Calendar.DAY_OF_YEAR, 1);  //dodanie jednego dnia
         Date future = calendar.getTime();
         System.out.println(now);
         System.out.println(future);
-        System.out.println(now.compareTo(future));
+        System.out.println(now.compareTo(future));  //porównanie dat
 
         TimeZone zoneCurrent = calendar.getTimeZone();
         System.out.println("Current timezone: " + zoneCurrent.getDisplayName());
         System.out.println("Current Zone Hour: " + calendar.get(Calendar.HOUR_OF_DAY));
-        TimeZone zoneLA = TimeZone.getTimeZone("America/Los_Angeles");
+
+        TimeZone zoneLA = TimeZone.getTimeZone("America/Los_Angeles");  //strefa czasowa dla danego miejsca na świecie
         System.out.println("LA timezone offset: " + zoneLA.getOffset(calendar.getTimeInMillis()));
-        calendar.setTimeZone(zoneLA);
+        calendar.setTimeZone(zoneLA);  //ustawianie strefy czsowej z danego miejsca
         System.out.println("LA zone Hour: " + calendar.get(Calendar.HOUR_OF_DAY));
 
 
Index: src/main/java/pl/com/empas/java_introductory_course/time/standard/DateFormatExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/pl/com/empas/java_introductory_course/time/standard/DateFormatExample.java	(revision 4b55cf1cb639ff0e66f1b20281670f642468146f)
+++ src/main/java/pl/com/empas/java_introductory_course/time/standard/DateFormatExample.java	(date 1523983347789)
@@ -18,7 +18,7 @@
         }
         System.out.println(now);
 
-        DateFormat customizedFormat = new SimpleDateFormat("YYYY-MM-dd hh:mm:ss");
+        DateFormat customizedFormat = new SimpleDateFormat("YYYY-MM-dd hh:mm:ss");  //wielkość liter ma znaczenie(np. duże DD - dzień roku, HH - 24 godziny)
         formattedDate = customizedFormat.format(now);
         System.out.println(formattedDate);
 
